version: 0.2
env:
  git-credential-helper: yes
  shell: bash
phases:
  install:
    runtime-versions:
      docker: 20
      #nodejs: 12
  pre_build:
    commands:
      ## Install kustomize
      #- echo Install kustomize...
      #- curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
      #- mv ./kustomize /usr/bin/kustomize && chmod +x /usr/bin/kustomize
      #- kustomize version
      ## Install yq
      #- wget https://github.com/mikefarah/yq/releases/download/v4.12.0/yq_linux_amd64 -O /usr/bin/yq && chmod +x /usr/bin/yq
      #- yq --version
      # Import credentials
      #- jq -c '.token = "${GITHUB_TOKEN}"' import-source-credentials.json > tmp.$$.json && mv tmp.$$.json import-source-credentials.json
      #- aws codebuild import-source-credentials --cli-input-json file://import-source-credentials.json
      #- aws codebuild list-source-credentials
      # Login to ECR
      - echo Logging in to ECR...
      - aws --version
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com      
      - echo "Changing to application directory..."
      - cd app
      - pwd
      ## Install nodejs application dependencies
      #- echo "Installing dependencies..."
      #- npm install

  build:
    commands:
      - echo Build started on `date`
      ## Run test
      #- echo Run node.js tests...
      #- npm run test
      ## Get application version 
      #- CONTAINER_IMAGE_TAG="$(node -e "console.log(require('./package.json').version);")"
      # Build the Docker images
      - echo Building the grpcserver Docker image...
      - cd grpcserver
      - docker build . -t grpc-server
      - docker images
      #- docker build -t lukondefmwila/express-test:$CONTAINER_IMAGE_TAG .
      # Log in to the Docker CLI
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
      - cd ..